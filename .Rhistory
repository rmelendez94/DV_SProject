shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
title: "DV_SProject"
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
require("jsonlite")
require("RCurl")
#Gather data from database fill into local data frame and retrieve headers and summary
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from BNKMKTG"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_rm46926', PASS='orcl_rm46926', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
head(df)
summary(df)
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
# 03-reactive
library(shiny)
ui <- fluidPage(
sliderInput(inputId = "num",
label = "Choose a number",
value = 25, min = 1, max = 100),
plotOutput("hist"),
verbatimTextOutput("stats")
)
server <- function(input, output) {
data <- reactive({
rnorm(input$num)
})
output$hist <- renderPlot({
hist(data())
})
output$stats <- renderPrint({
summary(data())
})
}
shinyApp(ui = ui, server = server)
# 03-reactive
library(shiny)
ui <- fluidPage(
sliderInput(inputId = "num",
label = "Choose a number",
value = 25, min = 1, max = 100),
plotOutput("hist"),
verbatimTextOutput("stats")
)
server <- function(input, output) {
data <- reactive({
rnorm(input$num)
})
output$hist <- renderPlot({
hist(data())
})
output$stats <- renderPrint({
summary(data())
})
}
shinyApp(ui = ui, server = server)
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
shiny::runApp('02 Shiny')
